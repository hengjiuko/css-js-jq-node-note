                jquery
1.jquery(dom查找器，它做几乎任何的操作，都是基于找到某个dom节点):
 是一个js库，它写的少，做得多，很大程度上减少了dom操作，可以节省很多时间

它可以做：-dom查找、操作
          -css的操作
          -很多的事件
          -ajax
jquery是一个库，而不是一个框架，它只提供了很多工具性质的东西，而没有提供一个全面的前端开发的解决方案。
  它只是对原生javascript的一个再封装
引入jquery，使用的是cnd链接
2.jquery语法
 根据id名，找到某个dom节点
   -$('#id名')――这叫css格式的表示法，这种写法遵循的是css的语法
――――js可以自定义对象
――――jquery语法查找dom节点，这是一个jq对象

  $("#id名")----这种代码越多，js执行的搜索就越多，相对的效率就越低

 所以， $("#id名")这种操作一般这样写
  var _xx= $("#id名");  就是把 $("#id名")的搜索结果放到一个变量中，这是jq优化、提高效率的方式之一
3.jq生成DOM节点
   $('<div/>')――――这是生成一个div，其它dom节点写法一样
   $('<div>').html('xxx')――――设置这个div的html内容；
   $('<div>').html('xxx').appendTo($('#xxid'))――――把生成的div标签，添加到id名为xxid的dom节点里面
   $('#xxid').children('div')――――查找xxid的子节点中的div标签
   $('#xxid').css('display','block');――――设置xxid的css样式
   .addClass()――――添加class方法
4.jq动画效果
 .animate();
 例如：$('#xxid').animate({
             'left':995*_imgInx
          },200);
    //以200毫秒为间隔，设置xxid这个div向左移动995px
  /*可能是jq2.14新版本把动画积累的问题给优化了，以前jq连续的触发.animate()动画方法,会出现你点击已经结束，但之前积累的动画还在执行的问题*/
  解决方法，stop()――它是清除所有之前的未执行的动画

 一般这么写：$('#xxid').stop().animate({
             '      left':995*_imgInx
             },200);
5.jq设置css
   写法一：$('#xxid').css(属性名，属性值)
   写法二：$('#xxid').css({
                    属性名 : 属性值,
                    属性名 : 属性值,
                    属性名 : 属性值
                    ...
                })
6.jq方法
 (1)选中一个集合当中的第几个成员：eq()――从0开始计算
  例如：
     <div id='xxid'>
        <p></p>
        <p></p>
        <p></p>
     </div>
 方法：$('#xxid').children().eq(2)――――获取第三个标签
 (2).index()
      <div id='xxid'>
        <p></p>
        <p></p>
        <p></p>
      </div>
  $('#xxid').children().index().on('click',...)
 返回的是从0开始计算的，第几个序号，你点击哪个p，返回的就是这个p在div里排几个 
（3）.siblings():就是一个集合的某个dom节点的反选














